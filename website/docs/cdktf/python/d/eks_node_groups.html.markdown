---
subcategory: "EKS (Elastic Kubernetes)"
layout: "aws"
page_title: "AWS: aws_eks_node_groups"
description: |-
  Provides a set of node groups for an EKS Cluster
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_eks_node_groups

Retrieve the EKS Node Groups associated with a named EKS cluster. This will allow you to pass a list of Node Group names to other resources.

## Example Usage

```python
# Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformIterator, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_eks_node_group import DataAwsEksNodeGroup
from imports.aws.data_aws_eks_node_groups import DataAwsEksNodeGroups
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DataAwsEksNodeGroups(self, "example",
            cluster_name="example"
        )
        # In most cases loops should be handled in the programming language context and
        #     not inside of the Terraform context. If you are looping over something external, e.g. a variable or a file input
        #     you should consider using a for loop. If you are looping over something only known to Terraform, e.g. a result of a data source
        #     you need to keep this like it is.
        example_for_each_iterator = TerraformIterator.from_list(
            Token.as_any(example.names))
        data_aws_eks_node_group_example = DataAwsEksNodeGroup(self, "example_1",
            cluster_name="example",
            node_group_name=Token.as_string(example_for_each_iterator.value),
            for_each=example_for_each_iterator
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_eks_node_group_example.override_logical_id("example")
```

## Argument Reference

* `cluster_name` - (Required) Name of the cluster.

## Attributes Reference

* `id` - Cluster name.
* `names` - Set of all node group names in an EKS Cluster.

<!-- cache-key: cdktf-0.17.1 input-67e4c28097db0a006e86f916ccac086093759cae927ef1de592203bbfe16be3a -->
---
subcategory: "VPC (Virtual Private Cloud)"
layout: "aws"
page_title: "AWS: aws_vpc_endpoint_route_table_association"
description: |-
  Manages a VPC Endpoint Route Table Association
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpc_endpoint_route_table_association

Manages a VPC Endpoint Route Table Association

## Example Usage

```python
# Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.vpc_endpoint_route_table_association import VpcEndpointRouteTableAssociation
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        VpcEndpointRouteTableAssociation(self, "example",
            route_table_id=Token.as_string(aws_route_table_example.id),
            vpc_endpoint_id=Token.as_string(aws_vpc_endpoint_example.id)
        )
```

## Argument Reference

The following arguments are supported:

* `route_table_id` - (Required) Identifier of the EC2 Route Table to be associated with the VPC Endpoint.
* `vpc_endpoint_id` - (Required) Identifier of the VPC Endpoint with which the EC2 Route Table will be associated.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `id` - A hash of the EC2 Route Table and VPC Endpoint identifiers.

## Import

VPC Endpoint Route Table Associations can be imported using `vpc_endpoint_id` together with `route_table_id`,
e.g.,

```
$ terraform import aws_vpc_endpoint_route_table_association.example vpce-aaaaaaaa/rtb-bbbbbbbb
```

<!-- cache-key: cdktf-0.17.1 input-cda3ce1d04e4046d8ae4611f1d1d64b19b361edefe91a878733ad1f421b29e74 -->
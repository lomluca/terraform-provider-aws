---
subcategory: "VPC Lattice"
layout: "aws"
page_title: "AWS: aws_vpclattice_resource_policy"
description: |-
  Terraform resource for managing an AWS VPC Lattice Resource Policy.
---


<!-- Please do not edit this file, it is generated. -->
# Resource: aws_vpclattice_resource_policy

Terraform resource for managing an AWS VPC Lattice Resource Policy.

## Example Usage

### Basic Usage

```python
# Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import Fn, Token, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-generation for more details.
#
from imports.aws.data_aws_caller_identity import DataAwsCallerIdentity
from imports.aws.data_aws_partition import DataAwsPartition
from imports.aws.vpclattice_resource_policy import VpclatticeResourcePolicy
from imports.aws.vpclattice_service_network import VpclatticeServiceNetwork
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = VpclatticeServiceNetwork(self, "example",
            name="example-vpclattice-service-network"
        )
        current = DataAwsCallerIdentity(self, "current")
        data_aws_partition_current = DataAwsPartition(self, "current_2")
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        data_aws_partition_current.override_logical_id("current")
        aws_vpclattice_resource_policy_example = VpclatticeResourcePolicy(self, "example_3",
            policy=Token.as_string(
                Fn.jsonencode({
                    "Statement": [{
                        "Action": ["vpc-lattice:CreateServiceNetworkVpcAssociation", "vpc-lattice:CreateServiceNetworkServiceAssociation", "vpc-lattice:GetServiceNetwork"
                        ],
                        "Effect": "Allow",
                        "Principal": {
                            "AWS": "arn:${" + data_aws_partition_current.partition + "}:iam::${" + current.account_id + "}:root"
                        },
                        "Resource": example.arn,
                        "Sid": "test-pol-principals-6"
                    }
                    ],
                    "Version": "2012-10-17"
                })),
            resource_arn=example.arn
        )
        # This allows the Terraform resource name to match the original name. You can remove the call if you don't need them to match.
        aws_vpclattice_resource_policy_example.override_logical_id("example")
```

## Argument Reference

The following arguments are required:

* `resource_arn` - (Required) The ID or Amazon Resource Name (ARN) of the service network or service for which the policy is created.
* `policy` - (Required) An IAM policy. The policy string in JSON must not contain newlines or blank lines.

## Attributes Reference

No additional attributes are exported.

## Import

VPC Lattice Resource Policy can be imported using the `resource_arn`, e.g.,

```
$ terraform import aws_vpclattice_resource_policy.example rft-8012925589
```

<!-- cache-key: cdktf-0.17.1 input-8705f976d624e9a849b81ea661f128586e01badf243ee85d7b861c4b3e680392 -->
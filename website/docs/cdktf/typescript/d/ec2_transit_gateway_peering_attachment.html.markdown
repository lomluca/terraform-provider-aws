---
subcategory: "Transit Gateway"
layout: "aws"
page_title: "AWS: aws_ec2_transit_gateway_peering_attachment"
description: |-
  Get information on an EC2 Transit Gateway Peering Attachment
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_ec2_transit_gateway_peering_attachment

Get information on an EC2 Transit Gateway Peering Attachment.

## Example Usage

### By Filter

```typescript
// Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsEc2TransitGatewayPeeringAttachment } from "./.gen/providers/aws/data-aws-ec2-transit-gateway-peering-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsEc2TransitGatewayPeeringAttachment(this, "example", {
      filter: [
        {
          name: "transit-gateway-attachment-id",
          values: ["tgw-attach-12345678"],
        },
      ],
    });
  }
}

```

### By Identifier

```typescript
// Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsEc2TransitGatewayPeeringAttachment } from "./.gen/providers/aws/data-aws-ec2-transit-gateway-peering-attachment";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new DataAwsEc2TransitGatewayPeeringAttachment(this, "attachment", {
      id: "tgw-attach-12345678",
    });
  }
}

```

## Argument Reference

The following arguments are supported:

* `filter` - (Optional) One or more configuration blocks containing name-values filters. Detailed below.
* `id` - (Optional) Identifier of the EC2 Transit Gateway Peering Attachment.
* `tags` - (Optional) Mapping of tags, each pair of which must exactly match
  a pair on the specific EC2 Transit Gateway Peering Attachment to retrieve.

More complex filters can be expressed using one or more `filter` sub-blocks,
which take the following arguments:

* `name` - (Required) Name of the field to filter by, as defined by
  [the underlying AWS API](https://docs.aws.amazon.com/AWSEC2/latest/APIReference/API_DescribeTransitGatewayPeeringAttachments.html).
* `values` - (Required) Set of values that are accepted for the given field.
  An EC2 Transit Gateway Peering Attachment be selected if any one of the given values matches.

## Attribute Reference

In addition to all arguments above, the following attributes are exported:

* `peerAccountId` - Identifier of the peer AWS account
* `peerRegion` - Identifier of the peer AWS region
* `peerTransitGatewayId` - Identifier of the peer EC2 Transit Gateway
* `transitGatewayId` - Identifier of the local EC2 Transit Gateway

## Timeouts

[Configuration options](https://developer.hashicorp.com/terraform/language/resources/syntax#operation-timeouts):

- `read` - (Default `20M`)

<!-- cache-key: cdktf-0.17.1 input-070f687dc6ea215734d45f7c1eda427968f4bc99d8b79e65dcd8d643efb5d83c -->
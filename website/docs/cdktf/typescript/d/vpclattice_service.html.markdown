---
subcategory: "VPC Lattice"
layout: "aws"
page_title: "AWS: aws_vpclattice_service"
description: |-
  Terraform data source for managing an AWS VPC Lattice Service.
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_vpclattice_service

Terraform data source for managing an AWS VPC Lattice Service.

## Example Usage

### Basic Usage

```typescript
// Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { DataAwsVpclatticeService } from "./.gen/providers/aws/data-aws-vpclattice-service";
interface MyConfig {
  serviceIdentifier: any;
}
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string, config: MyConfig) {
    super(scope, name);
    new DataAwsVpclatticeService(this, "example", {
      serviceIdentifier: config.serviceIdentifier,
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `serviceIdentifier` - (Required) ID or Amazon Resource Name (ARN) of the service network

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - ARN of the service.
* `authType` - Type of IAM policy. Either `none` or `awsIam`.
* `certificateArn` - Amazon Resource Name (ARN) of the certificate.
* `customDomainName` - Custom domain name of the service.
* `dnsEntry` - DNS name of the service.
* `id` - Unique identifier for the service.
* `status` - Status of the service.
* `tags` - List of tags associated with the service.

<!-- cache-key: cdktf-0.17.1 input-85529f84696452b8f17645977759bc5fa9f20e5a342632edcd61b21c9d5a23ef -->